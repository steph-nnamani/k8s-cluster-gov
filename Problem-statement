KUBERNETES CLUSTER GOVERNANCE CHALLENGES
========================================
As a DevOps Engineer, one of our primary responsibilities is to implement and effect compliance and governance of the Kubernetes Cluster, in such a way that ensures 
zero application downtime and continuous improvement of overal cluster security. This task is not as easy as it seems. DevOps Enginees spends so much time running tasks
aimed towards achieving this goal.

The Admission Controller is traditionally meant to solve the problem of effective and efficient Kubernetes Cluster Governance. It is still an effective tool. 
However, the problem with Admission Control is that it requires a superior skillset - Golang. Kubernetes Cluster Governance is supposed to be one of the
main duties of DevOps Engineers, but not too many of them can carry out this duty effectively due to defficiency in Golang skill. Even those that are very 
good in Golang spends reasonable time of their hours writting and updating Admission Policies. Why? No.1. It takes time to write No.2. There have been continuous 
rise in the number of microservices deployment across so many organisations, necessitation spike in the number of deployments and increasing focus on ensuring 
that effective cluster governance is always in place. Rules keep changing in response to changing application deployment requirements. 

As a result of the foregoing, any tool that will automate and improve on the compliance enforcement will no doubt reduce the amount of time usually allocated to this 
important aspect of cluster security and ultimately leads to cost savings. This will definitely improve the overall team velocity and efficiency, as Engineers will 
have more time to focus on other areas of productivity. We recently tried a tool that proved to make a huge difference - Kyverno.

KYVERNO
=======
Kyverno is a Dynamic Admission  Controller. It accepts simple human readable language - yaml file. Instructions/Policies are written in yaml and passed onto Kyverno.
Kyverno transforms the yaml file into a more complex language and pass it to the kubeApi for implementation. This is what Kyverno is bringing to the table:
1.Instead of writting Admission controllers in Golang; just write a simple yaml file that Kyverno understands and it will hand the required configuration for us.

I researched about this tool, implemented in my personal laboratory and then introduced it to my Organization. After a successfull POC session, all Engineers agreed 
that we should implement it. In the final implementation, we decided to integrate it with ArgoCD which brings automation to the whole process.

Project Outcome
===============
After successful adoption and implementation of the project, we have continued to experience a significan level of automation in the compliance governance. Senior Engineers 
presently spends less time on enforcement which is now done by Kyverno and ArgoCD. It's now much easier and less time demanding to write new policies or update existing ones. 
Junior Engineers does not have issues taking on this once dreaded responsibilty, while as a team we now focus on more important issues that management may decide on from 
time to time.
spend lesser time on enforcement, focused more on innovation. 
